package stringTasks;

/**
 * 1.	+Найти и вывести предложение из текста, в котором максимальное количество одинаковых слов.
 * 2.	+Вывести все предложения заданного текста в порядке возрастания количества слов в каждом из них.
 * 3.	+Найти такое слово в первом предложении, которого нет ни в одном из остальных предложений.
 * 4.	+Во всех вопросительных предложениях текста найти и напечатать слова заданной длины.
 * 5.	+В каждом предложении текста поменять местами первое слово с последним не изменяя длины предложения.
 * 6.	+В заданном тексте найти подстроку максимальной длины, являющуюся палиндромом.
 * 7.	+Из текста удалить все слова заданной длины, которые начинаются на согласную букву.
 */
public class Task {
    public static void main(String[] args) {
        String text = "Лету нужно время, лету чтобы разгореться? " +
                "Впереди еще долгие жаркие, знойные и просто теплые приятные деньки, когда солнце просыпается рано, " +
                "а заходит очень не скоро, давая вволю нагуляться, прежде чем погрузиться в шалаш сумерки? " +
                "А вот и солнце вот начинает припекать, наступают жаркие дни. Зелень вовсю цветет, одаривая съедобными травами. " +
                "Небосклон голубой и чистый, время от Нужно времени проплывают по лету нему пушистые облака. " +
                "Прогретый воздух источает, воздух  аромат, воздух цветения.";
        TextEditor textEditor = new TextEditor();
        System.out.println("Предложение с максимальным количеством одинаковых слов:\n" +
                textEditor.findSentenceMaxNumWordRepeated(text));
        System.out.println("\nВывести предложения в порядке возрастания кол-ва слов в каждом.");
        textEditor.printSentencesAscendingWordsNum(text);
        System.out.println("\nСлово в первом предложении, которого нет ни в одном из остальных предложений: " +
                textEditor.findUniqueWordInFirstSent(text));
        System.out.println("\nСлова длиной 5 символов из всех вопросительных предложений:");
        textEditor.printWordsGivenLengthInterrogSent(text, 5);
        System.out.println("\nВ каждом предложении поменяли местами первое слово с последним:\n" + textEditor.replaceWords(text));
        System.out.println("\nПалиндром максимальной длины: " + textEditor.findLongestPalindrome(text));
        System.out.println("Удалили все слова длины 6, которые начинаются на согланую букву.\n" +
                textEditor.removeConsGivenLengthWords(text, 6));
    }
}
